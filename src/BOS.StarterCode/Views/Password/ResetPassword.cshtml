@model BOS.StarterCode.Models.ChangePassword;
@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http;
@inject IConfiguration Configuration;
@using BOS.StarterCode.Models;
@using BOS.StarterCode.Models.BOSModels;
@using Newtonsoft.Json;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{
    ViewData["Title"] = "Reset Password";
    Layout = "LoginLayout";
    WhiteLabel appconfig = null;
    if (HttpContextAccessor.HttpContext.Session.GetString("ApplicationConfig") != null)
    {
        appconfig = JsonConvert.DeserializeObject<WhiteLabel>(HttpContextAccessor.HttpContext.Session.GetString("ApplicationConfig"));
    }
}
<style>
    body {
        overflow-x: hidden !important;
    }
</style>
<div class="row">
    <div class="col-12 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4">
        <div class="login-brand">
            <div class="logo-big">
                <div class="brandlogo" style="@(appconfig!=null && !string.IsNullOrEmpty(appconfig.Logo)?$"background-image: url('{appconfig.Logo}');" : $"background-image: url('../images/logo.png');")"></div>
                @*<img src=@(appconfig!=null && !string.IsNullOrEmpty(appconfig.Logo) ?  appconfig.Logo : "../images/logo.png") />*@
            </div>
        </div>
        <div class="text-center mb-3">
            <h3>@(appconfig != null && !string.IsNullOrEmpty(appconfig.Name) ? appconfig.Name : Configuration.GetSection("ApplicationName").Value)</h3>
        </div>
        <div class="card card-primary">
            <div class="card-header"><h4>@(ViewBag.Set == "true" ? "Set" : "Reset") Password</h4></div>
            <div class="card-body">
                @if (ViewBag.UserId != null)
                {
                    <form asp-action="ResetPassword" class="needs-validation" novalidate="">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group d-none">
                            <label asp-for="UserId" class="control-label"></label>
                            <input asp-for="UserId" class="form-control" value="@ViewBag.UserId" />
                            <div class="invalid-feedback">
                                <span asp-validation-for="UserId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="NewPassword" class="control-label"></label>
                            <input asp-for="NewPassword" class="form-control" id="newPassword" autocomplete="off" />
                            <div class="invalid-feedback">
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                            </div>
                            <table class="tbl-meter-wrapper d-none">
                                <tbody>
                                    <tr>
                                        <td>
                                            <div id="meter_wrapper">
                                                <div id="meter"></div>
                                            </div>
                                        </td>
                                        <td> <div id="pass_type"></div></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="form-group mb-4">
                            <label asp-for="ConfirmPassword" class="control-label"></label>
                            <input asp-for="ConfirmPassword" class="form-control" autocomplete="off" />
                            <div class="invalid-feedback">
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group" id="divButtonAndError">
                            @if (ViewBag.Set != null && ViewBag.Set == "true")
                            {
                                @*<input type="submit" value="Set Password" class="btn btn-primary d-block w-100" />*@
                                <button type="submit" class="btn btn-primary btn-lg btn-block" tabindex="4">
                                    Set Password
                                </button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary btn-lg btn-block" tabindex="4">
                                    Reset Password
                                </button>
                                @*<input type="submit" value="Reset Password" class="btn btn-primary d-block w-100" />*@
                            }
                        </div>
                    </form>
                }
                else if (ViewBag.Message != null)
                {
                    <div class="form-group">
                        <h6>@ViewBag.Message</h6>
                    </div>

                }
            </div>
        </div>
        <div class="mt-5 text-muted text-center">
            <a asp-action="Index" asp-controller="Auth">Back to Login</a>
        </div>
        <div class="simple-footer">
            @(appconfig != null && !string.IsNullOrEmpty(appconfig.Name) ? appconfig.Name : Configuration.GetSection("ApplicationName").Value) &copy;  2020
        </div>
    </div>
</div>
@if (ViewBag.Message != null)
{
    <script>
        $(document).ready(function () {
            $(function () {
                DisplayDialog({ Success: true, Message: '@ViewBag.Message' });
            });
        });
    </script>
}
<style>
    .field-validation-error {
        color: red;
    }
</style>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    $(document).ready(function () {
        $("#newPassword").on('keypress', function (e) {
            if (e.which == 32) {
                return false;
            }
            if ($("#newPassword").val() != "") {
                $(".tbl-meter-wrapper").removeClass("d-none");
            } else {
                $(".tbl-meter-wrapper").removeClass("d-none").addClass("d-none");
            }
            CheckPasswordStrength();
        });
    });
</script>
<style>
    #meter_wrapper {
        margin-top: 20px;
        width: 200px;
        height: 15px;
        border-radius: 3px;
    }

    #meter {
        width: 0px;
        height: 15px;
        border-radius: 0;
    }

    #pass_type {
        font-size: 15px;
        margin-top: 20px;
        color: grey;
        margin-left: 10px;
    }
</style>
